// <auto-generated />
using System;
using Food_Creator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Food_Creator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241014124534_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Food_Creator.Model.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishId"));

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.HasKey("DishId");

                    b.HasIndex("FoodId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            FoodId = 1
                        },
                        new
                        {
                            DishId = 2,
                            FoodId = 2
                        });
                });

            modelBuilder.Entity("Food_Creator.Model.DishIngredient", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DishId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("DishIngredients");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            IngredientId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            DishId = 1,
                            IngredientId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            DishId = 1,
                            IngredientId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            DishId = 2,
                            IngredientId = 1,
                            Quantity = 4
                        },
                        new
                        {
                            DishId = 2,
                            IngredientId = 4,
                            Quantity = 2
                        },
                        new
                        {
                            DishId = 2,
                            IngredientId = 5,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Food_Creator.Model.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            FoodId = 1,
                            Name = "Pizza",
                            Price = 9.99f,
                            Url = "http://example.com/pizza"
                        },
                        new
                        {
                            FoodId = 2,
                            Name = "Burger",
                            Price = 5.99f,
                            Url = "http://example.com/burger"
                        });
                });

            modelBuilder.Entity("Food_Creator.Model.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.HasIndex("FoodId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Name = "Tomato",
                            Price = 0.5f,
                            Type = 1,
                            Url = "http://example.com/tomato"
                        },
                        new
                        {
                            IngredientId = 2,
                            Name = "Cheese",
                            Price = 1.5f,
                            Type = 3,
                            Url = "http://example.com/cheese"
                        },
                        new
                        {
                            IngredientId = 3,
                            Name = "Basil",
                            Price = 0.2f,
                            Type = 5,
                            Url = "http://example.com/basil"
                        },
                        new
                        {
                            IngredientId = 4,
                            Name = "Beef 100g",
                            Price = 5f,
                            Type = 0,
                            Url = "http://example.com/beef"
                        },
                        new
                        {
                            IngredientId = 5,
                            Name = "Bacon 30g",
                            Price = 2.88f,
                            Type = 0,
                            Url = "http://example.com/bacon"
                        });
                });

            modelBuilder.Entity("Food_Creator.Model.Dish", b =>
                {
                    b.HasOne("Food_Creator.Model.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");
                });

            modelBuilder.Entity("Food_Creator.Model.DishIngredient", b =>
                {
                    b.HasOne("Food_Creator.Model.Dish", "Dish")
                        .WithMany("DishIngredients")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Food_Creator.Model.Ingredient", "Ingredient")
                        .WithMany("DishIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Food_Creator.Model.Ingredient", b =>
                {
                    b.HasOne("Food_Creator.Model.Food", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("FoodId");
                });

            modelBuilder.Entity("Food_Creator.Model.Dish", b =>
                {
                    b.Navigation("DishIngredients");
                });

            modelBuilder.Entity("Food_Creator.Model.Food", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("Food_Creator.Model.Ingredient", b =>
                {
                    b.Navigation("DishIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
